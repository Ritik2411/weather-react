{"version":3,"sources":["Components/Weather.js","Components/Fields.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","data","temp","Math","floor","minTemp","temp_min","maxTemp","temp_max","console","log","img","icon","Container","className","city_name","country_name","style","marginTop","marginBottom","src","alt","height","paddingRight","paddingLeft","description","useStyles","makeStyles","input","color","fontWeight","Fields","useState","setData","city","setCity","country","setCountry","cityname","setCityName","countryname","setCountryName","classes","APIKEY","useEffect","a","axios","get","then","res","catch","err","setDatas","alert","name","sys","main","weather","weather_id","id","Grid","container","item","md","sm","xs","padding","TextField","variant","defaultValue","placeholder","InputProps","onChange","e","target","value","fullWidth","required","display","justifyContent","alignItems","Button","onClick","backgroundColor","undefined","map","App","paddingTop","paddingBottom","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c66d97.chunk.js","sourcesContent":["import { Container } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Style.css'\r\n\r\nfunction Weather({...data}) {\r\n\r\n    const temp = Math.floor(`${data.data.temp - 273.15}`)\r\n    const minTemp = Math.floor(`${data.data.temp_min - 273.15}`)\r\n    const maxTemp = Math.floor((`${data.data.temp_max - 273.15}`))\r\n    console.log(data)\r\n    var img = ` http://openweathermap.org/img/wn/${data.data.icon}@2x.png` \r\n\r\n    return (\r\n        <Container>\r\n            <p className='text'>{data.data.city_name},{data.data.country_name}</p>\r\n            <div style={{marginTop:'-20px',marginBottom:'-20px'}}>\r\n                <img src={img} alt='No Icon URL' style={{height:'100px'}}/>\r\n            </div>\r\n\r\n            <div style={{marginTop:'10px'}}>\r\n                <p className='text'>\r\n                    {temp}&deg;C\r\n                </p>\r\n            </div>        \r\n            \r\n            <div style={{marginTop:'10px'}}>\r\n                <p className='text'>\r\n                    <span style={{paddingRight:'10px'}}>Min:{minTemp}&deg;C</span>\r\n                    <span style={{paddingLeft:'10px'}}>Max:{maxTemp}&deg;C</span>\r\n                </p>\r\n            </div>\r\n\r\n            <div style={{marginTop:'10px'}}>\r\n                <p className='text'>\r\n                    {data.data.description}\r\n                </p>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import { Grid,Container,TextField,Button } from '@material-ui/core'\r\nimport React, { useEffect, useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport Weather from './Weather'\r\nimport axios from 'axios'\r\nimport './Style.css'\r\n\r\nconst useStyles = makeStyles({\r\n    input:{\r\n        color:'white',\r\n        fontWeight:'bold'\r\n    }\r\n})\r\n\r\nfunction Fields() {\r\n    const [data,setData] = useState([])\r\n    const [city,setCity] = useState('')\r\n    const [country,setCountry] = useState('')\r\n    let [cityname,setCityName] = useState()\r\n    let [countryname,setCountryName] = useState()\r\n    const classes = useStyles()\r\n    const APIKEY='90bfa957d5559eb9b624130304d15ba4'\r\n\r\n    \r\n    console.log(cityname,countryname)\r\n    useEffect(()=>{\r\n        const setDatas = async () => {\r\n            await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=London&appid=${APIKEY}`)\r\n            .then(res=>{\r\n                console.log(res.data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n        setDatas()\r\n    },[])\r\n\r\n    const setDatas = async () => {\r\n        setCityName(city)\r\n        setCountryName(country)\r\n        if(city === '' && country === ''){\r\n            alert('Enter The City And Country Name')\r\n        }\r\n        else{\r\n            await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${APIKEY}`)\r\n            .then(res=>{\r\n                setData(\r\n                    [{\r\n                       city_name:res.data.name,\r\n                       country_name:res.data.sys.country,\r\n                       temp:res.data.main.temp,\r\n                       temp_min:res.data.main.temp_min,\r\n                       temp_max:res.data.main.temp_max,\r\n                       description:res.data.weather[0].description,\r\n                       weather_id:res.data.weather[0].id,\r\n                       icon:res.data.weather[0].icon,\r\n                    }]\r\n                )\r\n                \r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Grid item md={4} sm={12} xs={12} style={{padding:'20px 10px 20px 10px'}}>\r\n                    <TextField \r\n                        variant='standard'\r\n                        color=\"primary\" \r\n                        defaultValue={city}\r\n                        placeholder='Enter City'\r\n                        InputProps={{\r\n                            className: classes.input\r\n                        }}\r\n                        onChange={(e)=>\r\n                        setCity(e.target.value)\r\n                        }\r\n                        fullWidth\r\n                        required    \r\n                        />\r\n                </Grid>\r\n\r\n                <Grid item md={4} sm={12} xs={12} style={{padding:'20px 10px 20px 10px'}}>\r\n                    <TextField \r\n                        variant='standard' \r\n                        color='primary' \r\n                        placeholder='Enter Country' \r\n                        defaultValue={country}\r\n                        InputProps={{\r\n                            className: classes.input\r\n                        }}\r\n                        onChange={e=>setCountry(e.target.value)}\r\n                        fullWidth\r\n                        required    \r\n                        />\r\n                </Grid>\r\n\r\n                <Grid item md={4} sm={12} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                    <Button variant='contained' color='primary' onClick={setDatas} style={{backgroundColor:'#cf9700'}}>GET WEATHER</Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {\r\n               (cityname === undefined || countryname === undefined)?(\r\n                   null\r\n               ):(\r\n                   <div className='weather'> \r\n                        {\r\n                            data.map(data=>(\r\n                                <Weather data={data}/>\r\n                            ))\r\n                        }\r\n                   </div>\r\n               )\r\n            }    \r\n       </Container>\r\n    )\r\n}\r\n\r\nexport default Fields\r\n","import './App.css';\nimport Fields from './Components/Fields'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <div style={{paddingTop:'10px',paddingBottom:'120px',backgroundImage:'url(/Images/blur-background-1187974.jpg)',backgroundSize:'cover',backgroundRepeat:'no-repeat',backgroundPosition:'center',height:'623px'}}>\n        <h1 style={{textAlign:'center',fontWeight:'bold',color:'white',marginTop:'50px',marginBottom:'50px'}}>Live Weather</h1> \n        <Fields/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}